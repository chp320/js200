/*
    [ 스코프 이해하기 ]
    - 스코프 : 유효 범위로써 변수와 매개변수가 어디까지 유효한지를 나타냄.
    - 자바스크립트에서는 '전역'과 '함수 단위'로 스코프를 생성
      '함수' 안에서 선언된 변수는 함수 블록 안에서만 접근 가능하며, '전역'에 선언한 변수는 코드 어디에서나 접근 가능함.
*/

var a = 10 ;
console.log(a) ;

function print() {
    var b = 20 ;
    if(true) {
        var c = 30 ;    // 변수 c 는 if문 블록 내에서 선언되었지만 var 키워드로 선언되었기에 함수 스코프에 정의됨. 즉, print 함수 내 유효한 변수임.
    }
    console.log(c) ;
}

print() ;
// console.log(b) ;    // print 함수 밖에서 print 함수 내 선언한 변수 b를 호추함. 에러.

console.log('*********************************************') ;

/*
    [ 정적 스코프 ]
    - 스코프는 정적 스코프, 동적 스코프로 나눌 수 있으며
    - 코드를 작성하는 시점에 스코프가 결정되는 것을 '정적 스코프'라 지칭하고, 자바스크립트는 대표적인 '정적 스코프'임.
*/
var a = 'global' ;

function print1() {
    console.log(a) ;    // print1 함수 내에서 전역 변수인 a 를 호출. 즉, print1 함수 내에서는 변수 a를 찾을 수 없어 전역 변수 a 를 호출한 것임.
}

function print2() {
    var a = 'local' ;   // print2 함수 내에서 print2 함수 내에서만 유효한 지역변수 a 를 선언.
    print1() ;
}

print1() ;
print2() ; 
